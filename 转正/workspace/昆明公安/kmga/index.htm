<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title>无标题文档</title>
</head>

<body id="body" background="images/bg2.png" leftmargin="0" topmargin="0" style="background-color:transparent">
    <div style=" position:absolute; left:85px; top:29px;"><img src="images/logo.png" width="540" height="76" /></div>
    <div style=" position:absolute; left:88px; top:125px;">
        <div style=" position:absolute; left:0px; top:0px;"></div>
        <div style=" position:absolute; left:0px; top:211px; width:550px; height:99px; background:url(images/icon_bg1.png);">
            <div id="mainTitle" style=" position:absolute; left:0; top:58px; width:528px; text-indent:0.5em; font-size:30px; color:#fff">昆明市西山区公安局</div>
        </div>
    </div>
    <div style=" position:absolute; left:647px; top:125px;"><img id="menu1" src="images/pic2_02.png" width="269" height="310" /></div>
    <div style=" position:absolute; left:926px; top:125px;"><img id="menu2" src="images/pic2_03.png" width="268" height="150" /></div>
    <div style=" position:absolute; left:926px; top:285px;"><img id="menu3" src="images/pic2_04.png" width="268" height="150" /></div>
    <div style=" position:absolute; left:88px; top:445px;"><img id="menu4" src="images/pic2_05.png" width="550" height="150" /></div>
    <div style=" position:absolute; left:647px; top:445px;"><img id="menu5" src="images/pic2_06.png" width="175" height="150" /></div>
    <div style=" position:absolute; left:833px; top:445px;"><img id="menu6" src="images/pic2_07.png" width="175" height="150" /></div>
    <div style=" position:absolute; left:1018px; top:445px;"><img id="menu7" src="images/pic2_08.png" width="175" height="150" /></div>
    <div id="focus" style="position:absolute; left:83px; top:120px; width:550px; height:310px;border:5px solid #ffd800;border-radius:16px;"></div>
    <div style=" position:absolute; left:0px; top:624px; width:1280px; height:50px; background:url(images/icon_bg2.png); line-height:50px;">
        <div style=" position:absolute; left:143px; top:0px; line-height:50px; font-size:24px; color:#bcc8d8; ">
            <marquee>9月26日上午，昆明市公安局在南市警务营区举行十九大安保攻坚战誓师大会。</marquee>
        </div>
    </div>

    <div style="position: absolute; left: 41px; top: 95px; width: 651px;visibility:hidden;">
        <table width="100%" border="0" cellspacing="0" cellpadding="0">
            <tr>
                <td width="93" height="81"><img src="images/jd01.png" width="93" height="81" /></td>
                <td background="images/jd02.png">&nbsp;</td>
                <td width="93" height="81"><img src="images/jd03.png" width="93" height="81" /></td>
            </tr>
            <tr>
                <td height="232" background="images/jd04.png">&nbsp;</td>
                <td>&nbsp;</td>
                <td background="images/jd05.png">&nbsp;</td>
            </tr>
            <tr>
                <td width="93" height="81"><img src="images/jd06.png" width="93" height="81" /></td>
                <td background="images/jd07.png">&nbsp;</td>
                <td width="93" height="81"><img src="images/jd08.png" width="93" height="81" /></td>
            </tr>
        </table>

    </div>
    <script src="js/common.js"></script>
    <script>
        document.onkeydown = eventHandler;
        document.onsystemevent = eventHandler;

        function eventHandler(eve) {
            var e = eve || window.event;
            var keycode = e.keyCode || e.which || e.charCode;
            iDebug("---keycode--=" + keycode);
            switch (keycode) {
                case 1: // up
                case 38:
                case 87:
                    changUD(-1);
                    return false;
                    break;
                case 2: // down
                case 40:
                case 83:
                    changUD(1);
                    return false;
                    break;
                case 3: // left
                case 37:
                case 65:
                    changeLr(-1);
                    return false;
                    break;
                case 4: // right
                case 39:
                case 68:
                    changeLr(1)
                    return false;
                    break;
                case 13: //KEY_SELECT
                    doSelect();
                    return false;
                    break;
                case 8: //KEY_BACK
                    goBack();
                    return false;
                    break;
                case 27:
                case 339:
                    goBack();
                    return false;
                    break;
                case 4109: //音量+
                case 595:
                    changeVolume(1);
                    break;
                case 4110:
                case 596:
                    changeVolume(-1);
                    break;
                case 4108: //静音键
                case 597:
                    checkMute();
                    break;
                case 13001:
                    play();
                    //messageTips(keycode);	
                    return false;
                case 13009:
                    pause();
                    return false;
                case 13011:
                    resume();
                    return false;
                case 13015:
                    stop();
                    MPlayer.play(playUrl);
                    return false;
                case 13002:
                case 13003:
                case 13004:
                case 13010:
                case 13012:
                case 13013:
                case 13014:
                    // messageTips(keycode);
                    return false;
            }
        }

        function play() {
            MPlayer.play();
        }

        function pause() {
            MPlayer.pause();
        }

        function stop() {
            MPlayer.stop();
        }

        function resume() {
            MPlayer.resume();
        }

        var volume_timeout = -1;
        var volumeShowFlag = false;

        function changeVolume(__num) {
            if (MPlayer.$browser == "NGB") {
                if (MPlayer.getMuteStatus()) { //静音状态
                    var tmpflag = MPlayer.setUnmute(); //取消静音
                    hideMute();
                }
            }
            var tempVolume = MPlayer.getVolume();
            tempVolume = Math.floor((tempVolume + __num * 4) / 4);
            if (tempVolume > 25) {
                tempVolume = 25;
            } else if (tempVolume < 0) {
                tempVolume = 0;
            }
            iDebug("changeVolume tempVolume=" + tempVolume);
            MPlayer.setVolume(tempVolume * 4);
            parent.$("volumeValue").innerText = tempVolume * 4;
            showVolumn(tempVolume);
            clearTimeout(volume_timeout);
            volume_timeout = setTimeout("hideVolume()", 3000);
        }

        /*显示音量值和进度条*/
        function showVolumn(__num) {
            volumeShowFlag = true;
            for (var i = 0; i < 25; i++) {
                if (i < __num) {
                    parent.$("volume_icon" + i).src = "images/volume_bar2.png";
                } else {
                    parent.$("volume_icon" + i).src = "images/volume_bar1.png";
                }
            }
            parent.$("volumeBox").style.visibility = "visible";
        }


        /*隐藏音量进度条*/
        function hideVolume() {
            volumeShowFlag = false;
            parent.$("volumeBox").style.visibility = "hidden";
        }

        /*检测静音，是静音则恢复声音，不是静音则显示静音
         */
        function firstLoadCheckMute() {
            var __tmpFlag = MPlayer.getMuteStatus();
            iDebug("firstLoadCheckMute  __tmpFlag=" + __tmpFlag);
            if (__tmpFlag) {
                showMute();
            }
        }

        function checkMute() {
            if (MPlayer.$browser == "NGB") {
                if (MPlayer.getMuteStatus()) { //如果是静音，则恢复声音
                    var tmpflag = MPlayer.setUnmute(); //取消静音
                    hideMute();
                } else {
                    var tmpflag = MPlayer.setMute(); //设置静音
                    showMute();
                }
            }
        }

        function showMute() {
            if (volumeShowFlag) {
                hideVolume();
            }
            parent.$("mute").style.visibility = "visible";
        }

        function hideMute() {
            parent.$("mute").style.visibility = "hidden";
        }

        var timer_tip = -1;
        var dataPath = "menu.js",
            menuData = [],
            pos = mySessionStorage.getItem("pos") ? parseInt(mySessionStorage.getItem("pos")) : 0,
            isFocus = false,
            perpos = 0,
            device_id = navigator.appName.indexOf("iPanel") != -1 ? iPanel.eventFrame.device_id : "50001002",
            access_token = navigator.appName.indexOf("iPanel") != -1 ? iPanel.eventFrame.access_token : "TOKEN50001002",
            slaveAddr = "http://slave.homed.me:13160";
        var programListUrl = slaveAddr + "/homed/program/get_list?pageidx=1&pagenum=1&accesstoken=" + access_token +
            "&label=818"; //598
        var vedioInfoUrl = slaveAddr + "/media/video/get_info?accesstoken=" + access_token + "&videoid=";
        var isFullScreenFlag = false;
        // 请求数据
        function ajaxData() {
            sendAjax(this.dataPath, null, function (data) {
                var getData = eval("(" + data + ")");
                menuData = getData;
                initPage();
                requestVedioData();
            }, "utf-8");
        }
        // 初始化页面
        function initPage() {
            if (menuData) {
                for (var i = 0; i < 8; i++) {
                    $("menu" + i).src = menuData[i].focusImageUrl;
                }
                if (menuData[0].entryWord.length > 17) {
                    $("mainTitle").innerText = menuData[0].entryWord.slice(0, 17);
                } else {
                    $("mainTitle").innerText = menuData[0].entryWord;
                }
            }
        }
        // 上下
        function changUD(num) {
            clearStyle();
            if (num > 0) {
                if (pos == 4 || pos == 5) {
                    pos -= 4;
                } else if (pos === 0 || pos === 1 || pos === 3) {
                    pos += 4;
                } else if (pos == 2) {
                    pos++;
                } else if (pos === 6) {
                    pos = 1;
                } else {
                    pos -= 5;
                }
            } else {
                if (pos == 4 || pos == 5 || pos === 7) {
                    pos -= 4;
                } else if (pos === 0 || pos === 1) {
                    pos += 4;
                } else if (pos == 2) {
                    pos += 5;
                } else if (pos === 3) {
                    pos--;
                } else if (pos === 6) {
                    pos = 3;
                }
            }
            focusMove();
        }
        // 左右
        function changeLr(num) {
            clearStyle();
            if (num > 0) {
                if (pos < 2 || (pos > 3 && pos < 7)) {
                    pos++;
                } else if (pos === 2 || pos === 3) {
                    pos = 0;
                } else if (pos === 7) {
                    pos = 4;
                }
            } else {
                if (pos !== 0 && pos !== 3 && pos !== 4) {
                    pos--;
                } else if (pos === 0) {
                    pos = 2;
                } else if (pos === 3) {
                    pos = 1;
                } else {
                    pos = 7;
                }
            }
            focusMove();
        }
        // 焦点移动
        function focusMove() {
            if (pos === 0) {
                focusStyle(83, 120, 550, 310);
            } else if (pos === 1) {
                focusStyle(643, 120, 268, 310);
            } else if (pos === 2) {
                focusStyle(921, 120, 268, 150);
            } else if (pos === 3) {
                focusStyle(921, 280, 268, 150);
            } else if (pos === 4) {
                focusStyle(83, 440, 550, 150);
            } else if (pos === 5) {
                focusStyle(643, 440, 174, 150);
            } else if (pos === 6) {
                focusStyle(827, 440, 174, 150);
            } else if (pos === 7) {
                focusStyle(1013, 440, 174, 150);
            }
            if (pos === 0) {
                if (menuData[0].entryWord.length > 17) {
                    $("mainTitle").innerHTML = '<marquee>' + menuData[0].entryWord + '</marquee>';
                } else {
                    $("mainTitle").innerText = menuData[0].entryWord;
                }
            }
        }
        // focusStyle
        function focusStyle(l, t, w, h) {
            $("focus").style.top = t + 'px';
            $("focus").style.left = l + 'px';
            $("focus").style.width = w + 'px';
            $("focus").style.height = h + 'px';
        }
        // 清除样式
        function clearStyle() {
            if (pos === 0) {
                if (menuData[0].entryWord.length > 17) {
                    $("mainTitle").innerHTML = menuData[0].entryWord.slice(0, 17);
                } else {
                    $("mainTitle").innerText = menuData[0].entryWord;
                }
            } // 
        }

        var videoId = "";
        var playUrl = "";
        var ajaxObj = null;

        function requestVedioData() {
            iDebug("programListUrl = " + programListUrl);
            ajaxObj = null;
            if (ajaxObj != null) {
                ajaxObj.requestAbort();
            }
            ajaxObj = new AjaxClass();
            ajaxObj.frame = window;
            //ajaxObj.charset = "gbk";
            ajaxObj.successCallback = function (_xmlHttp, _params) {
                //iDebug("requestVedioData="+_xmlHttp.responseText);
                var _res = eval('(' + _xmlHttp.responseText + ')');
                var res = _res;
                if (res.ret == 0) {
                    var list = res.list;
                    console.log(list)
                    if (list == null || list.length == 0) {
                        iDebug("列表为空！");
                    } else {
                        videoId = list[0].id;
                        iDebug("videoId=" + videoId);
                        $("mainTitle").innerText = list[0].name;
                        getVideoInfo();
                    }
                } else {
                    iDebug("获取列表失败！", res.ret);
                }
            };
            ajaxObj.failureCallback = function (_xmlHttp, _params) {};
            ajaxObj.url = programListUrl;
            ajaxObj.requestData();
        }

        /*******************播放相关代码*********************/
        function getVideoInfo() {
            vedioInfoUrl = vedioInfoUrl + videoId;
            iDebug("getVideoInfo-->vedioInfoUrl=" + vedioInfoUrl);
            ajaxObj = null;
            if (ajaxObj != null) {
                ajaxObj.requestAbort();
            }
            ajaxObj = new AjaxClass();
            ajaxObj.frame = window;
            //ajaxObj.charset = "gbk";
            ajaxObj.successCallback = function (_xmlHttp, _params) {
                var _res = eval('(' + _xmlHttp.responseText + ')');
                var data = _res;
                if (data.ret == 0) {
                    playUrl = getPlayUrlByType(data.demand_url, "http://");
                    if (playUrl) playUrl += "?protocol=http";
                    if (playUrl) {
                        var play_token = data.play_token;
                        if (playUrl.indexOf("?") >= 0) {
                            playUrl += "&playtype=demand&accesstoken=" + access_token + "&programid=" + videoId +
                                "&playtoken=" + (play_token ? play_token : "ABCDEFGHIGK") + "&verifycode=" +
                                device_id + "&auth=yes";
                        } else {
                            playUrl += "?playtype=demand&accesstoken=" + access_token + "&programid=" + videoId +
                                "&playtoken=" + (play_token ? play_token : "ABCDEFGHIGK") + "&verifycode=" +
                                device_id + "&auth=yes";
                        }
                        iDebug("playUrl==" + playUrl);
                        playVedio();
                    }
                } else {
                    iDebug("--getVideoInfo-wangwei--onError---")
                }
            };
            ajaxObj.failureCallback = function (_xmlHttp, _params) {
                iDebug("[index.htm]---getVideoInfo()---onError---")
            };
            ajaxObj.url = vedioInfoUrl;
            ajaxObj.requestData();
        }

        function getPlayUrlByType(_urlArr, _keyWords, _nokeyWords) {
            if (_urlArr.length == 0) return null;
            for (var i = 0; i < _urlArr.length; i++) {
                if (_urlArr[i].indexOf(_keyWords) > -1) {
                    if (typeof (_nokeyWords) != "undefined" && _urlArr[i].indexOf(_nokeyWords) > -1) continue;
                    if (_urlArr[i].indexOf("rtsp://") > -1) {
                        _urlArr[i] += "?qamname=" + (iPanel.eventFrame.area_code ? iPanel.eventFrame.area_code : "123");
                        iDebug("-----_urlArr[i]-----" + _urlArr[i])
                    } else if (_urlArr[i].indexOf("iad://") > -1) {
                        _urlArr[i] += "?qamname=" + (iPanel.eventFrame.area_code ? iPanel.eventFrame.area_code : "123");
                        iDebug("-----_urlArr[i]-----" + _urlArr[i])
                    }
                    return _urlArr[i]
                }
            }
            return null;
        }

        var playTimeout = -1;

        function playVedio() {
            iDebug("playVedio__playUrl=" + playUrl);
            if (playUrl != null) {
                //if(parent.onShowFlag){//mainframe也不触发onshow,这块去掉
                MPlayer.init();
                MPlayer.setPosition(88, 125, 550, 310);
                MPlayer.play(playUrl);
                firstLoadCheckMute();

                /*}else{
                	clearTimeout(playTimeout);
                	playTimeout = setTimeout("playVedio()",100);	
                }*/
            }
        }

        /****************** 定义播放器-start *******************/
        var MPlayer = {
            $MID: 0,
            $browser: "stb",
            checkBrowser: function () {
                var appName = navigator.appName;
                if (typeof MediaPlayer != "undefined") {
                    this.$browser = "NGB";
                } else if (appName.indexOf("Google") != -1 || appName.indexOf("Netscape") != -1) {
                    this.$browser = "PC";
                }
                iDebug("[MPlayer]checkBrowser browser=" + this.$browser);
            },
            init: function () { //初始化播放器
                this.checkBrowser();
                if (this.$browser == "NGB") {
                    if (window.$MP == "" || window.$MP == null) window.$MP = new MediaPlayer();
                    /*var PLAYER_INSTANCE_ID = GlobalVarManager.getItemValue("PLAYER_INSTANCE_ID");
                    if(PLAYER_INSTANCE_ID == null) {
                    	this.$MID = $MP.getPlayerInstanceID();
                    	GlobalVarManager.setItemValue("PLAYER_INSTANCE_ID",this.$MID);
                    } else {
                    	this.$MID = GlobalVarManager.getItemValue("PLAYER_INSTANCE_ID");
                    }*/
                    this.$MID = $MP.getPlayerInstanceID();
                    var flag = $MP.bindPlayerInstance(this.$MID);
                    iDebug("[MPlayer] bind flag=" + flag + ";mediaId=" + this.$MID);
                }
            },
            play: function (__url, __type) {
                //iDebug("[MPlayer]play typeof $MP="+ typeof($MP) + ";$MP="+$MP);
                if (this.$browser == "NGB") {
                    if (__url == null && __type == null) {
                        $MP.play();
                        iDebug("[MPlayer]play start");
                        return;
                    } else if (__url == "" || __url == null) {
                        return;
                    }
                    $MP.setMediaSource(__url);
                    iDebug("[MPlayer]play url=" + __url);
                }
            },
            setPosition: function (__x, __y, __w, __h) {
                __x = __x || 0;
                __y = __y || 0;
                __w = __w || 1280;
                __h = __h || 720;
                if (this.$browser == "NGB") {
                    $MP.setVideoDisplayMode(0);
                    /*var rec = new Rectangle(__x, __y, __w, __h);
                    $MP.setVideoDisplayArea(rec);
                    $MP.refresh();*/
                    var videoRectangle = new Rectangle();
                    videoRectangle.left = __x;
                    videoRectangle.top = __y;
                    videoRectangle.width = __w;
                    videoRectangle.height = __h;
                    $MP.setVideoDisplayArea(videoRectangle);
                    $MP.refresh();
                }
            },
            stop: function (__type) {
                if (this.$browser == "NGB") {
                    $MP.stop();
                    // $MP.clearVideoOutput();//清帧

                    if (__type == 1) {
                        var flag = $MP.unbindPlayerInstance(this.$MID);
                        iDebug("[MPlayer] unbind flag=" + flag + ";;mediaId=" + this.$MID);
                    }
                }
            },
            pause: function () {
                if (this.$browser == "NGB") {
                    $MP.pause();
                }
            },
            resume: function () {
                if (this.$browser == "NGB") {
                    $MP.resume();
                }
            },
            setMute: function () {
                if (this.$browser == "NGB") {
                    AudioSetting.mute();
                }
            },
            setUnmute: function () {
                if (this.$browser == "NGB") {
                    AudioSetting.unMute();
                }
            },
            getMuteStatus: function () {
                if (this.$browser == "NGB") {
                    return AudioSetting.isMute();
                }
            },
            setVolume: function (__vol) {
                if (this.$browser == "NGB") {
                    $MP.setVolume(__vol);
                }
            },
            getVolume: function () {
                if (this.$browser == "NGB") {
                    return $MP.getVolume();
                }
            },
            getElapsed: function () {
                if (this.$browser == "NGB") {
                    return $MP.getCurrentPlayTime();
                }
            },
            getDuration: function () {
                if (this.$browser == "NGB") {
                    return $MP.getMediaDuration();
                }
            },
            seek: function (__sec) {

            },
            setEventCallback: function (__eventCallback) {

            }
        };
        /****************** 定义播放器-end *******************/

        function doSelect() {
            if (pos === 0) {
                isFullScreenFlag = true;
                $("body").style.visibility = "hidden";
                $("body").style.background = "url()";
                MPlayer.setPosition(0, 0, 1280, 720);
            } else {
                stop()
                if (menuData[pos].linkUrl) {
                    window.location.href = menuData[pos].linkUrl;
                } else {
                    window.location.href = menuData[pos].enName + "/index.htm";
                }
            }
        }
        // goBack
        function goBack() {
            if (isFullScreenFlag) {
                isFullScreenFlag = false;
                $("body").style.visibility = "visible";
                $("body").style.background = "url(images/bg2.png)";
                MPlayer.setPosition(88, 125, 550, 310);
                showFocus();
            } else {
                stop()
                window.location.href = '../index.htm'
            }
        }
        // init\
        function init() {
            ajaxData();
            focusMove();
            iDebug("---版本----11.16/17.04");
        }
        window.onload = init();
    </script>
</body>

</html>