<!doctype html>
<html>
    
    <head>
        <meta charset="utf-8">
        <title>
            无标题文档
        </title>
    </head>
    <script type="text/javascript" src="js/ajax.js">
    </script>
    <script type="text/javascript" src="js/config.js">
    </script>
    <script type="text/javascript" src="js/common.js">
    </script>
    <script type="text/javascript" src="js/keyevent.js">
    </script>
    <script type="text/javascript" src="js/showList.js">
    </script>
    <script type="text/javascript" src="js/mediaPlayer.js">
    </script>
    <script>
        var playUrl = "";
        var switchPlaceArr = []; //创建的临时的播放地址
        var iStartRecord = false; //是否正在录制视频
        var countTimer = -1;
        var showTipsTimeout = -1;
        var btnPos = 0;
        var start = 0;
        var Stoping =false;
        var playParms = {
            "accesstoken": "",
            //登录令牌
            "programid": "",
            //频道chnlid
            "playtype": "live",
            //类型
            "protocol": "http",
            //协议类型
            "playtoken": "ABCDEFGHIGK",
            //是否购买了视频，字符串:为空
            "verifycode": "" //登录的deviceid
        };

        var parmsObj = {
            "meetingName": "",
            "placeMaster": cardNo,
            "type": 0,
            //0:视频会议   1:培训视频  2:三会一课  4:视频交流
            "identifyValue": "",
        };
        function eventHandler(eventObj) {
            var keycode = eventObj.code;
            divDebug(keycode);
            switch (keycode) {
            case "KEY_UP":
                //changeUD( - 1);
                return EVENT.STOP;
                break;
            case "KEY_DOWN":
                //changeUD(1);
                return EVENT.STOP;
                break;
            case "KEY_LEFT":
                changeLR( - 1);
                return EVENT.STOP;
                break;
            case "KEY_RIGHT":
                changeLR(1);
                return EVENT.STOP;
                break;
            case "KEY_SELECT":
                doSelect();
                return EVENT.STOP;
                break;
            case "KEY_PAGE_UP":

                return EVENT.STOP;
                break;
            case "KEY_PAGE_DOWN":

                return EVENT.STOP;
                break;

            case "KEY_BACK":
                stopVoid();
                stopMeeting();
                return EVENT.STOP;
                break;
            case "MSG_MEDIA_URL_VALID":
                iDebug("--detail.htm--fun eventHandler-----13001");
                //httpInstance.stop(0);
                httpInstance.play();
                return EVENT.STOP;
                break;
            case "KEY_HOMEPAGE":

            default:
                return EVENT.DOWN;
                break;
            }
        }
        function init() {
        	  showcurrTime();
            getParm();
            showTime();
        }
        function getParm() {
            var identifyCode = getGlobalParms("sphy_identifyCode");
            if (identifyCode != "") {
                parmsObj.identifyValue = identifyCode;
                //$("meetingCode").innerText = parmsObj.identifyValue;
            }
            startMeeting();
        }
        function changeLR(_num) {
						btnPos = btnPos==0?1:0;
						$("btnFocus").style.left = btnPos*177+370+"px";
						}
        function doSelect() {
					if(btnPos==0){
						if(iStartRecord){
							//iStartRecord = false;
							//$("recoder").style.visibility = "hidden";
							
							stopRecordVideo();
						}else{
							
							startRecordVideo();
							}
						}else{
							if(!Stoping){
								Stoping = true;
								stopMeeting();
								}
							}
}
        function startMeeting() {
            var url = noRecordUrl;
            if (!isGet) {
                url = url.replace("{0}", parmsObj.meetingName).replace("{1}", parmsObj.placeMaster).replace("{2}", parmsObj.type).replace("{3}", parmsObj.identifyValue);
            }
            iDebug(">>>zhaoql:initiateMeeting--startMeeting--url=" + url);
            ajax({
                url: url,
                type: "GET",
                dataType: "json",
                onSuccess: function(responseText) {
                    iDebug(">>>zhaoql:startMeeting--responseText="+responseText);
                    var tempObj = eval('(' + responseText + ')');
                    if (typeof tempObj != "undefined" && tempObj.result == "E0000") {
                        iDebug("zhaoql:initiateMeeting--tempObj.msg=" + tempObj.msg);
                        status = 0;
                        playParms.programid = tempObj.msg;
                        playUrl = sliceMonitorAddr(playParms.programid);
                        iDebug(">>>zhaoql:initiateMeeting--startMeeting--playUrl=" + playUrl);
                        setGlobalParms({
                            "sphy_chnlId": playParms.programid,
                            "sphy_identifyType": 1
                        });
                        switchPlaceArr.push(playUrl);
                        playTimeout = setTimeout(function() {
                            divDebug(switchPlaceArr[0]);
                            playVideo(switchPlaceArr[0]);
                        },
                        1500);
                        //iDebug(">>>zhaoql:initiateMeeting--startMeeting--playUrl:videoIndex="+switchPlaceArr[videoIndex]);	
                        getMeetingDetail();		
                    } else {
                        showTips("error:startMeeting" + tempObj.msg);
                    }
                },
                onError: function() {
                    showTips("error:startMeeting" + tempObj.msg);
                }
            });
        }
        function getMeetingDetail(){
        	var url = MeetingDetailUrl;
            if (!isGet) {
                url = url.replace("{0}", parmsObj.placeMaster).replace("{1}", parmsObj.type).replace("{2}", parmsObj.identifyValue);
            }
            iDebug(">>>zhaoql:initiateMeeting--startMeeting--url=" + url);
            ajax({
                url: url,
                type: "GET",
                dataType: "json",
                onSuccess: function(responseText) {
                    //iDebug(">>>zhaoql:startMeeting--responseText="+responseText);
                    var tempObj = eval('(' + responseText + ')');
                    if (typeof tempObj != "undefined" && tempObj.result == "E0000") {
                       $("meetingName").innerHTML =  tempObj.msg.mainPlace.placeName;
                       $("meetingDay").innerHTML =  tempObj.msg.startTime;
                       $("meetingTitle").innerHTML =  tempObj.msg.theme||"无议题";
                       $("meetingDesc").innerHTML =  tempObj.msg.content||"无议题";
                       	
                    } else {
                        showTips("error:getMeetingDetail" + tempObj.msg +parmsObj.identifyValue);
                    }
                },
                onError: function() {
                    iDebug(">>>zhaoql:startMeeting--request->error");
                }
            });
        	}
        /********************************************
					结束会议
********************************************/
        function stopMeeting() {
       
            var url = endRecordUrl;
            if (!isGet) {
                url = url.replace("{0}", playParms.programid).replace("{1}", parmsObj.placeMaster);
            }
            iDebug(">>>zhaoql:initiateMeeting--stopMeeting--url=" + url);
            //$("loadIcon").style.visibility = "visible";
            ajax({
                url: url,
                type: "GET",
                dataType: "json",
                onSuccess: function(responseText) {
                    iDebug(">>>zhaoql:initiateMeeting--stopMeeting--responseText=" + responseText);
                    var res = eval("(" + responseText + ")");
                    if (typeof res != "undefined") { //&& res.result=="E0000"
                        // $("loadIcon").style.visibility = "hidden";
                        status = -1;
                        //$("btn0").innerHTML = "已录制";
                        removeAll();
                        exit();
                        clearTimeout(countTimer);
                        setTimeout(function() {
                            window.location.href = "index.htm";
                        },
                        1000);
                        iDebug("zhaoqlinitiateMeeting--end meeting  success->" + res.msg);
                    }
                },
                onError: function() {
                    //$("loadIcon").style.visibility = "hidden";
                    status = -1;
                    removeAll();
                    exit();
                    clearTimeout(countTimer);
                    setTimeout(function() {
                        window.location.href = "../index.htm";
                    },
                    200);
                    iDebug(">>>zhaoql:initiateMeeting----startRecordVideo failed");
                }
            });
        }
        function playVideo(_url) {
            iDebug(">>>zhaoql:subMeetingSwitch--playVideo--url=" + _url);
            var url = _url;
            
            if (navigatorFlag == "Inspur") {
                iSTB.player.play(url);
                iSTB.player.set_video_window(74,144,636,358);
            } else {
                newInstance();
                httpInstance.setPosition(74,144,636,358);
                httpInstance.setSource(url);
            }
        }
        var httpInstance = null;
        function newInstance() {
        	//divDebug("newInstance   init");
            iDebug("------------fun newInstance==httpInstance:" + httpInstance);
            if (httpInstance == null) {
                httpInstance = new PlayObj();
                httpInstance.init();
                httpInstance.bindID();
                //divDebug("newInstance   init111");
                httpInstance.setMode(1);
                 //divDebug("newInstance   init222");
                ///httpInstance.setPosition(74,144,363,358);
            }
        }
        function stopVoid() {
            //divDebug("stopVoid   navigatorFlag:" + navigatorFlag);
            if (navigatorFlag == "iPanel") {
                if (httpInstance != null) {
                    httpInstance.stop(0);
                    httpInstance.close();
                    httpInstance.unbindID();
                    //divDebug("stopVoid   unbindID:");
                    httpInstance = null;
                }
            }else if(navigatorFlag == "Inspur"){
							iSTB.player.stop();
						}
        }
        /**********************************************
			       拼接视频地址
***********************************************/
        function sliceMonitorAddr(chnlid) {
            playParms.accesstoken = getGlobalParms("sphy_loginToken");
            playParms.verifycode = getGlobalParms("sphy_deviceId");
            return playUrlSuffix + "?accesstoken=" + playParms.accesstoken + "&programid=" + chnlid + "&playtype=" + playParms.playtype + "&protocol=" + playParms.protocol + "&playtoken=" + playParms.playtoken + "&verifycode=" + playParms.verifycode + "&auth=no";
        }
        function startRecordVideo() {
            var url = startRecordUrl;
            if (!isGet) {
                url = url.replace("{0}", parmsObj.placeMaster).replace("{1}", playParms.programid);
            }
            iDebug(">>>zhaoql:initiateMeeting--startRecordVideo--url=" + url);
            ajax({
                url: url,
                type: "GET",
                dataType: "json",
                onSuccess: function(responseText) {
                    iDebug(">>>zhaoql:initiateMeeting--startRecordVideo--responseText=" + responseText);
                    var res = eval("(" + responseText + ")");
                    if (typeof res != "undefined" && res.result == "E0000") {
                        iDebug(">>>zhaoql:initiateMeeting--startRecordVideo--success");
                        iStartRecord = true;
							          $("recoder").style.visibility = "visible";
							          $("btn0").innerHTML = "结束录制";
							          $("btn0").style.background = "url(btn1_ct2.png)"
                        status = 1;
                        startTimer();
                        var currData = new Date();
                        setGlobalParms({
                            "sphy_currTime": currData.getTime(),
                            "sphy_iStartRecord": "1"
                        });
                    } else {
                        showTips("error:" + res.msg);
                    }
                },
                onError: function() {
                    iDebug(">>>zhaoql:initiateMeeting----startRecordVideo failed");
                }
            });
        }
        function stopRecordVideo() {
            var url = endRecordVideoUrl;
            if (!isGet) {
                url = url.replace("{0}", parmsObj.placeMaster).replace("{1}", playParms.programid);
            }
            iDebug(">>>zhaoql:initiateMeeting--startRecordVideo--url=" + url);
            ajax({
                url: url,
                type: "GET",
                dataType: "json",
                onSuccess: function(responseText) {
                    iDebug(">>>zhaoql:initiateMeeting--stopRecordVideo--responseText=" + responseText);
                    var res = eval("(" + responseText + ")");
                    if (typeof res != "undefined" && res.result == "E0000") {
                        iDebug(">>>zhaoql:initiateMeeting--stopRecordVideo--success");
                        iStartRecord = false;
							          $("recoder").style.visibility = "visible";
							          $("btn0").innerHTML = "已结束录制";
							          clearTimeout(countTimer);
                        
                    } else {
                        showTips("error:" + res.msg);
                    }
                },
                onError: function() {
                    iDebug(">>>zhaoql:initiateMeeting----stopRecordVideo failed");
                }
            });
        }
        
        function showTime() { //返回时间需要记忆
            if (iStartRecord) {
                var tempDate = getGlobalParms("sphy_currTime");
                if (tempDate != "") {
                    var currData = new Date();
                    var stractValue = (currData.getTime() - tempDate) / 1000;
                    //相差的秒值
                    start = stractValue;
                    startTimer();
                }
            } else {
                stopTimer();
            }
        }

        function startTimer() {
            var temp;
            clearTimeout(countTimer);
            start++;
            temp = start;
            timeChange(temp);
            countTimer = setTimeout("startTimer()", 1000);
        }

        function stopTimer() {
            clearTimeout(countTimer);
        }

        function timeChange(__date) { //把s数换算为时分秒
            var timeArr = [];
            timeArr[0] = Math.floor(__date / 36000);
            timeArr[1] = Math.floor((__date % 36000) / 3600);
            timeArr[2] = Math.floor((__date % 3600) / 600);
            timeArr[3] = Math.floor((__date % 600) / 60);
            timeArr[4] = Math.floor((__date % 60) / 10);
            timeArr[5] = Math.floor((__date % 10));
            $("recoderTime").innerText = timeArr[0] + timeArr[1] + ":" + timeArr[2] + timeArr[3] + ":" + timeArr[4] + timeArr[5];
        }
        function showTips(__str) {
            $("tip_div").style.visibility = "visible";
            $("tip_cont").innerText = __str;
            showTipFlag = false;
            clearTimeout(showTipsTimeout);
            showTipsTimeout = setTimeout(function() {
                $("tip_div").style.visibility = "hidden";
                showTipFlag = true;
            },
            2000);
        }
        function removeAll() {
            removeGlobalParms(["sphy_loginToken", "sphy_deviceId", "sphy_chnlId", "sphy_identifyType", "sphy_isSelFlagArr", "sphy_position", "sphy_topicData", "sphy_allTopicStr", "sphy_identifyCode", "sphy_areaIds", "sphy_currTime", "sphy_iStartRecord", "sphy_newAddTopicData"]);
        }
        function exit() {

}
        var timer = null;
        function showcurrTime(){
        	clearTimeout(timer);
        	var currDate = new Date();
        	$("time").innerHTML = currDate.Format("hh:mm:ss");
        	$("day").innerHTML = currDate.Format("yyyy/MM/dd");
        	timer = setInterval(function(){showcurrTime();},1000)
        	}
    </script>
    
    <body bgcolor="transparent" background="bg2.png" leftmargin="0" topmargin="0" onload="init();">
        <div style="position:absolute;left:73px;top:32px;">
            <img src="logo.png" width="475" height="67">
        </div>
       <div style="position:absolute;left:1079px;top:56px; width:130px; line-height:px; font-size:18px; color:rgba(255,255,255,.6); letter-spacing:2px;line-height:18px;">
            <span id="time" style="font-size:26px;line-height:22px;">
                15:10:30
            </span>
            <br/>
            <span id="day">2015/01/13</span>
        </div>
        <!--底部-->
        <div style="position:absolute;left:75px;top:662px;width:720px;height:24px;line-height:24px; font-size:24px; color:#faf9f6; background:url(notice.png) no-repeat left center; padding-left:36px;">
            尊敬的用户：您好！今明两天有大到暴雨，请您做好防雨防暴措施。
        </div>
        <div style="position:absolute;left:903px;top:652px;">
            <img src="tips01.png" width="305" height="40">
        </div>
        <!--视频-->
        <div style="position:absolute;left:754px;top:145px;width:453px; height:451px; background:url(listR_bg3.png);">
            <div style="position:absolute;left:19px;top:27px;width:416px; height:370px; font-size:26px; color:#000; line-height:28px;">
                会场名称：<span id="meetingName"></span>
                <br/>
                <br/>
                会议开始时间：<span id="meetingDay"></span>
                <br/>
                <br/>
                会议议题：<span id="meetingTitle"></span>
                <br/>
                <br/>
                内容简介：<span id="meetingDesc"></span>
            </div>
        </div>
        <!--录制提示-->
        <div id="recoder" style="position: absolute; left: 74px; top: 559px; width: 214px; line-height: 26px; background: url(dot01.png) no-repeat left center; font-size: 24px; color: #fff; padding-left: 32px;visibility:hidden">
            共录制
            <span id="recoderTime">
            	00:00:00
            </span>
        </div>
        <!--按钮-->
        <div id="btn0" style="position:absolute;left:385px;top:545px; width:148px; height:52px; background:url(btn1_ct.png); line-height:52px; font-size:24px; color:#fff; text-align:center;">
            开始录制
        </div>
        <div id="btn1" style="position:absolute;left:562px;top:545px; width:148px; height:52px; background:url(btn1_f1.png); line-height:52px; font-size:24px; color:#f8af89; text-align:center;">
            结束会议
        </div>
        <div id="btnFocus" style="position: absolute; left: 370px; top: 530px; width: 180px; height: 84px; background: url(btn1_f2.png);">
        </div>
        <!--提示-->
        <div id="tip_div" style="position:absolute; left:365px; top:153px; width:560px; height:360px; background:url(tck_bg.png) center no-repeat; visibility:hidden;">
            <table align="center" width="500" height="340" border="0" cellspacing="0"
            cellpadding="0" style="font-size:28px; color:#FFFFFF;">
                <tr>
                    <td height="60" align="center">
                        温馨提示
                    </td>
                </tr>
                <tr>
                    <td height="150" align="center" style="font-size:25px;" id="tip_cont">
                    </td>
                </tr>
            </table>
        </div>
        <div id="test" style="position:absolute; left:365px; top:153px; width:560px; height:360px;background:#ededed;display:none">
        	1111
        </div>
    </body>

</html>